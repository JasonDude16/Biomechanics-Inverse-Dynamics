use_condaenv("/anaconda3/bin/python3.exe")
py_config()
import("matplotlib")
library(reticulate)
py_available()_module_import
py_available()
py_install("matplotlib")
import("matplotlib")
reticulate::repl_python()
import pandas as pd
reticulate::repl_python()
import matplotlib.pyplot as plt
import("matplotlib")
import("matplotlib.pyplot")
plt <- import("matplotlib.pyplot")
plt
reticulate::repl_python()
plt.annotate()
reticulate::repl_python()
?plt.annotate
View(plt)
import("pandas")
py_install("pandas")
pd <- import("pandas")
reticulate::repl_python()
import pandas as pd
setwd("~/")
reticulate::repl_python()
reticulate::repl_python()
py_config()
reticulate::py_config()
library(reticulate)
py_available("matplotlib")
py_available("pandas")
reticulate::py_config()
py_available("scipy")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
setwd("~/Desktop/Code/Pulm_Rehab/Home")
load("dat.rda")
dat$Week_Count <- as.factor(dat$Week_Count)
dat$Activity <- as.factor(dat$Activity)
dat$Speed <- as.numeric(dat$Speed)
dat$Grade <- as.numeric(dat$Grade)
dat$Watts <- as.numeric(dat$Watts)
dat$Duration <- as.numeric(dat$Duration)
dat$Frequency <- as.numeric(dat$Frequency)
dat$METs <- as.numeric(dat$METs)
dat <-
dat %>%
select(-Supp_O2) %>%
mutate(METs =
ifelse(Activity=="TM",(Speed*26.8*.1+Speed*26.8*1.8*Grade)/100+3.5/3.5,
ifelse(Activity=="NS",(Watts + 44.04) / 36.8,
ifelse(Activity=="RB",(Watts + 46.567) / 23, METs)))) %>%
arrange(Patient)
View(dat)
paste("SubID", dat$Patient, sep = "")
paste("SubID-", dat$Patient, sep = "")
library(tidyverse)
library(readxl)
setwd("~/Desktop/Code/Pulm_Rehab/Home")
load("dat.rda")
dat$Patient <- paste("SubID-", dat$Patient, sep = "")
dat$Week_Count <- as.factor(dat$Week_Count)
dat$Activity <- as.factor(dat$Activity)
dat$Speed <- as.numeric(dat$Speed)
dat$Grade <- as.numeric(dat$Grade)
dat$Watts <- as.numeric(dat$Watts)
dat$Duration <- as.numeric(dat$Duration)
dat$Frequency <- as.numeric(dat$Frequency)
dat$METs <- as.numeric(dat$METs)
dat <-
dat %>%
select(-Supp_O2) %>%
mutate(METs =
ifelse(Activity=="TM",(Speed*26.8*.1+Speed*26.8*1.8*Grade)/100+3.5/3.5,
ifelse(Activity=="NS",(Watts + 44.04) / 36.8,
ifelse(Activity=="RB",(Watts + 46.567) / 23, METs)))) %>%
arrange(Patient)
View(dat)
rmarkdown::paged_table(dat, options = list(rows.print = 10))
dat_plot <-
dat %>%
filter(!is.na(METs), !is.na(Week_Count),
Patient %in% c("SubID-10",
"SubID-16",
"SubID-49",
"SubID-51")) %>%
group_by(Week_Count, Patient) %>%
summarise(MET_min = sum (Duration * Frequency * METs))
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point() +
# geom_point(aes(fill = as.factor(Patient))) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET_Minutes")
dat_plot <-
dat %>%
filter(!is.na(METs), !is.na(Week_Count),
Patient %in% c("SubID-10",
"SubID-16",
"SubID-49",
"SubID-51")) %>%
group_by(Week_Count, Patient) %>%
summarise(MET_min = sum (Duration * Frequency * METs))
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point() +
# geom_point(aes(fill = as.factor(Patient))) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
title("Change in Patients Workload Over Time")
dat_plot <-
dat %>%
filter(!is.na(METs), !is.na(Week_Count),
Patient %in% c("SubID-10",
"SubID-16",
"SubID-49",
"SubID-51")) %>%
group_by(Week_Count, Patient) %>%
summarise(MET_min = sum (Duration * Frequency * METs))
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point() +
# geom_point(aes(fill = as.factor(Patient))) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
dat_plot <-
dat %>%
filter(!is.na(METs), !is.na(Week_Count),
Patient %in% c("SubID-10",
"SubID-16",
"SubID-49",
"SubID-51")) %>%
group_by(Week_Count, Patient) %>%
summarise(MET_min = sum (Duration * Frequency * METs))
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point() +
# geom_point(aes(fill = as.factor(Patient))) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time", position = "center")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point() +
# geom_point(aes(fill = as.factor(Patient))) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red") +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 1.2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time") +
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
dat_plot <-
dat %>%
filter(!is.na(METs), !is.na(Week_Count),
Patient %in% c("SubID-16",
"SubID-10",
"SubID-49",
"SubID-51")) %>%
group_by(Week_Count, Patient) %>%
summarise(MET_min = sum (Duration * Frequency * METs))
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank()) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),text = "Times New Roman") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),text = "Times") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(), family = "times") +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
tex = element_text(family = "times")) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(family = "times")) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(family = "Times")) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12, family = "Times")) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12, family = "Times", hjust = 0.5)) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12, family = "Times"),
plot.title = element_text(hjust = 0.5)) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12, family = "Times"),
plot.title = element_text(hjust = 0.5, vjust = .5)) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12, family = "Times"),
plot.title = element_text(hjust = 0.5, vjust = 1)) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12, family = "Times"),
plot.title = element_text(hjust = 0.5, vjust = 2)) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12, family = "Times"),
plot.title = element_text(hjust = 0.5, vjust = 1.5)) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12, family = "Times"),
plot.title = element_text(hjust = 0.5)) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patients Workload Over Time")
ggplot(dat_plot, mapping = aes(Week_Count, MET_min)) +
facet_wrap(~as.factor(Patient), scales = "free_y") +
geom_point(col = "red", pch = 17, cex = 2) +
geom_line(aes(group = Patient)) +
theme_bw() +
theme(legend.position = "none",
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
text = element_text(size = 12, family = "Times"),
plot.title = element_text(hjust = 0.5)) +
ylab("Weekly MET Minutes") +
xlab("Week Count") +
labs(title = "Change in Patient's Workload Over Time")
View(dat)
View(dat)
View(dat)
write.csv(dat, file = "de-identified_data.csv")
write.csv(dat, file = "de-identified_data.csv")
getwd
getwd()
setwd("~/Desktop/Code/Pulm_Rehab/Home")
setwd("~/Desktop/Code/Pulm_Rehab/Home")
dat <- readr::read_csv("de-identified_data.csv")
View(dat)
dat <- readr::read_csv("de-identified_data.csv")
View(dat)
dat <- readr::read.csv("de-identified_data.csv")
dat <- read.csv("de-identified_data.csv")
View(dat)
View(dat)
View(dat)
dat <- read.csv("de-identified_data.csv")
View(dat)
library(ggplot2)
library(readr)
library(magrittr)
library(dplyr)
setwd("~/Desktop/Code/Pulm_Rehab/Home")
dat <- read_csv("de-identified_data.csv")
dat$Week_Count <- as.factor(dat$Week_Count)
dat$Activity <- as.factor(dat$Activity)
dat$Speed <- as.numeric(dat$Speed)
dat$Grade <- as.numeric(dat$Grade)
dat$Watts <- as.numeric(dat$Watts)
dat$Duration <- as.numeric(dat$Duration)
dat$Frequency <- as.numeric(dat$Frequency)
dat$METs <- as.numeric(dat$METs)
dat <-
dat %>%
mutate(METs =
ifelse(Activity=="TM",(Speed*26.8*.1+Speed*26.8*1.8*Grade)/100+3.5/3.5,
ifelse(Activity=="NS",(Watts + 44.04) / 36.8,
ifelse(Activity=="RB",(Watts + 46.567) / 23, METs)))) %>%
arrange(Patient)
View(dat)
![Long story short: Data analysis ain't easy](datascience.jpg)
![Long story short: Data analysis ain't easy](datascience.jpg)
img <- datascience.jpg
img <- "datascience.jpg"
knitr::include_graphics(img)
img <- "datascience.jpg"
knitr::include_graphics(img)
setwd("~/Desktop/Code/Biomechanics/Lab-3/data")
read.table("forces_moments.txt", sep = " ", header = F)
read.table("forces_moments.txt", sep = "", header = F)
read.delim("forces_moments.txt", sep = "", header = F)
read.delim2("forces_moments.txt", sep = "", header = F)
read.delim2("forces_moments.txt", sep = "/t", header = F)
read.delim2("forces_moments.txt", sep = "\t", header = F)
read.delim2("forces_moments.txt", sep = ",", header = F)
readr::read_csv("forces_moments.txt", sep = ",", header = F)
readr::read_csv("forces_moments.txt", col_names =  = F)
readr::read_csv("forces_moments.txt", col_names = F)
dat <- readr::read_csv("forces_moments.txt", col_names = F)
plot(X3)
plot(dat$X3)
library(ggplot2)
ggplot(dat, mapping = aes(x = X3)) + geom_smooth()
ggplot(dat, mapping = aes(x = X3)) + geom_density()
dat$index = 1:length(dat)
dat$index = 1:length(dat)
dat$index = 1:ncol(dat)
dat$index = 1:nrow(dat)
ggplot(dat, mapping = aes(x = X3, y = index)) + geom_smooth()
ggplot(dat, mapping = aes(x = X3, y = index)) + geom_line()
plot(dat$X3)
example("plot")
